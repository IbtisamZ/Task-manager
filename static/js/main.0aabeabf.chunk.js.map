{"version":3,"sources":["components/TodoListCard.js","App.js","index.js"],"names":["TodoListCard","useState","todo","setTodo","input","setInput","todoCount","setTodoCount","expanded","setExpanded","currentDate","Date","toLocaleString","month","year","day","currentDay","weekday","handleSubmit","e","preventDefault","prev","id","now","title","completed","currentCount","todoItems","map","item","Box","sx","mt","display","justifyContent","alignItems","flexDirection","textDecoration","color","Checkbox","disableRipple","checked","onChange","toggleItem","toggleCompletion","overflowWrap","Typography","IconButton","onClick","filter","todoForm","onSubmit","TextField","width","xs","sm","variant","placeholder","value","target","Fab","type","size","ml","backgroundColor","boxShadow","height","maxWidth","margin","textAlign","transition","maxHeight","borderBottom","mb","mx","Divider","fontWeight","fontSize","Collapse","in","timeout","unmountOnExit","Card","px","py","overflowY","borderRadius","bottom","position","App","theme","createTheme","palette","background","default","primary","main","text","common","gray","water","antiFlashWhite","silverSand","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aabeabf.chunk.js","sourcesContent":["import { Fragment, useState } from 'react';\nimport {\n  Box,\n  Fab,\n  Card,\n  Divider,\n  Checkbox,\n  Collapse,\n  TextField,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst TodoListCard = () => {\n  // set states and intial values\n  const [todo, setTodo] = useState([]);\n  const [input, setInput] = useState('');\n  const [todoCount, setTodoCount] = useState(0);\n  const [expanded, setExpanded] = useState(false);\n\n  const currentDate = new Date().toLocaleString(\n    'en-us',\n    {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric',\n    },\n  );\n  const currentDay = new Date(currentDate).toLocaleString(\n    'en-us',\n    { weekday: 'long' },\n  );\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // adding todos\n  const addTodoItem = (item) => {\n    if (!item) { return; } // prevent empty values\n\n    setTodo((prev) => [\n      ...prev, // saving previous todos\n      {\n        id: Date.now(),\n        title: input,\n        completed: false,\n      },\n    ]);\n    setTodoCount((currentCount) => currentCount + 1);\n  };\n\n  // removing todos\n  const removeTodoItem = (id) => {\n    setTodo(todo.filter((item) => item.id !== id));\n    setTodoCount((currentCount) => currentCount - 1);\n  };\n\n  // toggling todo completion\n  const toggleCompletion = (id) => {\n    const toggleItem = todo.map((item) => {\n      if (item.id === id) {\n        return { ...item, completed: !item.completed };\n      }\n\n      return item;\n    });\n\n    setTodo(toggleItem);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodoItem(input);\n    setInput('');\n  };\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  const todoItems = todo.map((item) => (\n      <Fragment key={item.id}>\n          <Box sx={{\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n          >\n              <Box sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                textDecoration: item.completed ? 'line-through' : null,\n                color: item.completed ? 'common.silverSand' : 'common.gray',\n              }}\n              >\n                  <Checkbox\n                      disableRipple\n                      checked={item.completed}\n                      onChange={() => toggleCompletion(item.id)}\n                  />\n                  <Box sx={{ overflowWrap: 'break-word' }}>\n                      <Typography>\n                          {item.title}\n                      </Typography>\n                  </Box>\n              </Box>\n              <Box>\n                  <IconButton\n                      disableRipple\n                      aria-label=\"delete\"\n                      onClick={() => removeTodoItem(item.id)}\n                  >\n                      <DeleteIcon />\n                  </IconButton>\n              </Box>\n          </Box>\n      </Fragment>\n  ));\n\n  const todoForm = (\n      <form onSubmit={handleSubmit}>\n          <Box sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n          >\n              <TextField\n                  sx={{\n                    width: {\n                      xs: '70%',\n                      sm: '80%',\n                    },\n                  }}\n                  variant=\"standard\"\n                  placeholder=\"Add a task here..\"\n                  value={input}\n                  onChange={handleInput}\n              />\n              <Fab\n                  type=\"submit\"\n                  disableRipple\n                  size=\"small\"\n                  sx={{\n                    ml: 3,\n                    backgroundColor: 'primary.main',\n                    color: 'text.main',\n                    boxShadow: 'none',\n                    '&:hover': {\n                      backgroundColor: 'common.water',\n                    },\n                  }}\n                  aria-label=\"add\"\n                  onClick={handleSubmit}\n              >\n                  <AddIcon />\n              </Fab>\n          </Box>\n      </form>\n  );\n\n  return (\n      <>\n          <Box sx={{\n            height: 650,\n            maxWidth: 530,\n            display: 'flex',\n            flexDirection: 'column',\n            margin: {\n              xs: '5rem 1rem',\n              sm: '5rem auto',\n            },\n          }}\n          >\n              <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                    transition: 'all 0.5s ease',\n                    backgroundColor: 'primary.main',\n                    height: expanded ? 150 : 1,\n                    maxHeight: expanded ? 150 : 1,\n                    borderBottom: expanded ? '1px solid #f4f6f7' : null,\n                    boxShadow: `0 10px 20px rgba(0,0,0,0.10),\n                    0 6px 6px rgba(0,0,0,0.05)`,\n                  }}\n                  onClick={handleExpandClick}\n              >\n                  <Box mb={3} mt={4}>\n                      <Box>\n                          <Typography variant=\"h4\" color=\"text.main\">\n                              {currentDay}\n                          </Typography>\n                      </Box>\n                      <Box>\n                          <Typography color=\"text.main\">\n                              {currentDate}\n                          </Typography>\n                      </Box>\n                      <Box mt={2} mb={1} mx={2}>\n                          <Divider\n                              sx={{ backgroundColor: 'common.antiFlashWhite' }}\n                          />\n                      </Box>\n                      {expanded\n                        && (\n                        <Box>\n                            <Typography\n                                color=\"text.main\"\n                                sx={{ fontWeight: 400, fontSize: 13 }}\n                            >\n                                {`${todoCount} tasks`}\n                            </Typography>\n                        </Box>\n                        )}\n                  </Box>\n              </Box>\n              <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                  <Card sx={{\n                    px: 4,\n                    py: 6,\n                    height: expanded ? 500 : 1,\n                    overflowY: 'scroll',\n                    borderRadius: 0,\n                    boxShadow: `0 10px 20px rgba(0,0,0,0.05), \n                    0 6px 6px rgba(0,0,0,0.05)`,\n                  }}\n                  >\n                      {todoForm}\n                      <Box mt={6}>\n                          {todoItems}\n                      </Box>\n                  </Card>\n              </Collapse>\n          </Box>\n          <Box sx={{\n            width: 1,\n            bottom: 10,\n            position: 'fixed',\n            textAlign: 'center',\n            color: 'common.silverSand',\n            fontSize: 13,\n          }}\n          >\n              — IbtisamZ —\n          </Box>\n      </>\n  );\n};\nexport default TodoListCard;\n","import CssBaseline from '@mui/material/CssBaseline';\nimport createTheme from '@mui/material/styles/createTheme';\nimport ThemeProvider from '@mui/material/styles/ThemeProvider';\nimport TodoListCard from './components/TodoListCard';\n\nconst App = () => {\n  const theme = createTheme({\n    palette: {\n      background: {\n        default: '#fff',\n      },\n      primary: {\n        main: '#d7e6ea',\n      },\n      text: {\n        main: '#fff',\n      },\n      common: {\n        gray: '#808080',\n        water: '#cce9ee',\n        antiFlashWhite: '#eff1f2',\n        silverSand: '#b8c3c6',\n      },\n    },\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <TodoListCard />\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}