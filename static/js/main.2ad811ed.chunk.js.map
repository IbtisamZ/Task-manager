{"version":3,"sources":["components/TodoForm/TodoForm.js","components/TodoCard/TodoCard.js","components/TodoListApp.js","App.js","index.js"],"names":["TodoForm","props","setTodoCount","useState","input","setInput","todo","setTodo","handleSubmit","e","preventDefault","prev","id","Date","now","title","completed","currentCount","todoForm","onSubmit","Box","sx","display","justifyContent","alignItems","TextField","width","xs","sm","variant","placeholder","value","onChange","target","Fab","disableRipple","type","size","ml","color","boxShadow","backgroundColor","onClick","todoItems","map","item","mt","flexDirection","textDecoration","Checkbox","checked","toggleItem","toggleCompletion","overflowWrap","Typography","IconButton","filter","TodoCard","todoCount","expanded","setExpanded","currentDate","toLocaleString","month","year","day","currentDay","weekday","height","maxWidth","margin","textAlign","maxHeight","transition","borderBottom","mb","mx","Divider","fontWeight","fontSize","Collapse","in","timeout","unmountOnExit","Card","px","py","overflowY","borderRadius","TodoListApp","App","theme","createTheme","palette","background","default","primary","main","text","common","gray","water","antiFlashWhite","silverSand","components","MuiButtonBase","styleOverrides","root","outline","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ad811ed.chunk.js","sourcesContent":["import {\n  Box,\n  Fab,\n  Checkbox,\n  TextField,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Fragment, useState } from 'react';\n\nconst TodoForm = (props) => {\n  const {\n    setTodoCount = () => { },\n  } = props;\n\n  const [input, setInput] = useState('');\n  const [todo, setTodo] = useState([]);\n\n  // adding todos\n  const addTodoItem = (item) => {\n    if (!item) { return; } // prevent empty values\n\n    setTodo((prev) => [\n      ...prev, // saving previous todos\n      {\n        id: Date.now(),\n        title: input,\n        completed: false,\n      },\n    ]);\n    setTodoCount((currentCount) => currentCount + 1);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodoItem(input);\n    setInput('');\n  };\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  // removing todos\n  const removeTodoItem = (id) => {\n    setTodo(todo.filter((item) => item.id !== id));\n    setTodoCount((currentCount) => currentCount - 1);\n  };\n\n  // toggling todo completion\n  const toggleCompletion = (id) => {\n    const toggleItem = todo.map((item) => {\n      if (item.id === id) {\n        return { ...item, completed: !item.completed };\n      }\n\n      return item;\n    });\n\n    setTodo(toggleItem);\n  };\n\n  const todoForm = (\n      <form onSubmit={handleSubmit}>\n          <Box sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n          >\n              <TextField\n                  sx={{\n                    width: {\n                      xs: '70%',\n                      sm: '80%',\n                    },\n                  }}\n                  variant=\"standard\"\n                  placeholder=\"Add a task here..\"\n                  value={input}\n                  onChange={handleInput}\n              />\n              <Fab\n                  disableRipple\n                  type=\"submit\"\n                  size=\"small\"\n                  sx={{\n                    ml: 3,\n                    color: 'text.main',\n                    boxShadow: 'none',\n                    backgroundColor: 'primary.main',\n                    '&:hover': {\n                      backgroundColor: 'common.water',\n                    },\n                  }}\n                  aria-label=\"add\"\n                  onClick={handleSubmit}\n              >\n                  <AddIcon />\n              </Fab>\n          </Box>\n      </form>\n  );\n\n  const todoItems = todo.map((item) => (\n      <Fragment key={item.id}>\n          <Box sx={{\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n          >\n              <Box sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                textDecoration: item.completed ? 'line-through' : null,\n                color: item.completed ? 'common.silverSand' : 'common.gray',\n              }}\n              >\n                  <Checkbox\n                      disableRipple\n                      checked={item.completed}\n                      onChange={() => toggleCompletion(item.id)}\n                  />\n                  <Box sx={{ overflowWrap: 'break-word' }}>\n                      <Typography>\n                          {item.title}\n                      </Typography>\n                  </Box>\n              </Box>\n              <Box>\n                  <IconButton\n                      disableRipple\n                      aria-label=\"delete\"\n                      onClick={() => removeTodoItem(item.id)}\n                  >\n                      <DeleteIcon />\n                  </IconButton>\n              </Box>\n          </Box>\n      </Fragment>\n  ));\n  return (\n      <Box>\n          {todoForm}\n          <Box mt={6}>\n              {todoItems}\n          </Box>\n      </Box>\n  );\n};\n\nexport default TodoForm;\n","import {\n  Box,\n  Card,\n  Divider,\n  Collapse,\n  Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport TodoForm from '../TodoForm/TodoForm';\n\nconst TodoCard = () => {\n  const [todoCount, setTodoCount] = useState(0);\n  const [expanded, setExpanded] = useState(true);\n\n  const currentDate = new Date().toLocaleString(\n    'en-us',\n    {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric',\n    },\n  );\n  const currentDay = new Date(currentDate).toLocaleString(\n    'en-us',\n    { weekday: 'long' },\n  );\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n      <Box sx={{\n        height: 700,\n        maxWidth: 530,\n        margin: {\n          xs: '5rem 1rem',\n          sm: '5rem auto',\n        },\n      }}\n      >\n          <Box\n              sx={{\n                display: 'flex',\n                textAlign: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: expanded ? 180 : 1,\n                maxHeight: expanded ? 180 : 1,\n                transition: 'all 0.5s ease',\n                backgroundColor: 'primary.main',\n                borderBottom: expanded ? '1px solid #f4f6f7' : null,\n                boxShadow: `0 10px 20px rgba(0,0,0,0.10),\n                    0 6px 6px rgba(0,0,0,0.05)`,\n              }}\n              onClick={handleExpandClick}\n          >\n              <Box mb={3} mt={4}>\n                  <Box>\n                      <Typography variant=\"h4\" color=\"text.main\">\n                          {currentDay}\n                      </Typography>\n                  </Box>\n                  <Box>\n                      <Typography color=\"text.main\">\n                          {currentDate}\n                      </Typography>\n                  </Box>\n                  <Box mt={2} mb={1} mx={2}>\n                      <Divider\n                          sx={{ backgroundColor: 'common.antiFlashWhite' }}\n                      />\n                  </Box>\n                  {expanded\n                        && (\n                        <Box>\n                            <Typography\n                                color=\"text.main\"\n                                sx={{ fontWeight: 400, fontSize: 13 }}\n                            >\n                                {`${todoCount} tasks`}\n                            </Typography>\n                        </Box>\n                        )}\n              </Box>\n          </Box>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <Card sx={{\n                px: 4,\n                py: 6,\n                height: expanded ? 520 : 1,\n                overflowY: 'scroll',\n                borderRadius: 0,\n                boxShadow: `0 10px 20px rgba(0,0,0,0.05), \n                    0 6px 6px rgba(0,0,0,0.05)`,\n              }}\n              >\n                  <TodoForm setTodoCount={setTodoCount} />\n              </Card>\n          </Collapse>\n      </Box>\n  );\n};\n\nexport default TodoCard;\n","import { Box } from '@mui/material';\nimport TodoCard from './TodoCard/TodoCard';\n\nconst TodoListApp = () => (\n    <Box sx={{ width: 1, height: 1 }}>\n        <TodoCard />\n        <Box sx={{\n          width: 1,\n          textAlign: 'center',\n          color: 'common.gray',\n          fontSize: 13,\n          mt: 6,\n          mb: 1,\n        }}\n        >\n            — IbtisamZ —\n        </Box>\n    </Box>\n);\nexport default TodoListApp;\n","import CssBaseline from '@mui/material/CssBaseline';\nimport createTheme from '@mui/material/styles/createTheme';\nimport ThemeProvider from '@mui/material/styles/ThemeProvider';\nimport TodoListApp from './components/TodoListApp';\n\nconst App = () => {\n  const theme = createTheme({\n    palette: {\n      background: {\n        default: '#fff',\n      },\n      primary: {\n        main: 'rgba(199, 224, 227)',\n      },\n      text: {\n        main: '#fff',\n      },\n      common: {\n        gray: '#808080',\n        water: 'rgba(193, 217, 220)',\n        antiFlashWhite: '#eff1f2',\n        silverSand: '#b8c3c6',\n      },\n    },\n    components: {\n      MuiButtonBase: {\n        styleOverrides: {\n          root: {\n            '&:focus': {\n              outline: 'none',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <TodoListApp />\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}