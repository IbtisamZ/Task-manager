{"version":3,"sources":["components/TodoForm/TodoForm.js","components/TodoCard/TodoCard.js","components/TodoListApp.js","App.js","index.js"],"names":["TodoForm","props","setTodoCount","useState","input","setInput","todo","setTodo","handleSubmit","e","preventDefault","prev","id","Date","now","title","completed","currentCount","todoForm","onSubmit","Box","sx","display","justifyContent","alignItems","TextField","width","variant","placeholder","value","onChange","target","Fab","disableRipple","type","size","ml","color","boxShadow","backgroundColor","onClick","todoItems","map","item","mt","flexDirection","textDecoration","Checkbox","checked","toggleItem","toggleCompletion","icon","checkedIcon","overflowWrap","Typography","IconButton","filter","px","TodoCard","todoCount","currentDate","toLocaleString","month","year","day","currentDay","weekday","Card","py","m","height","maxWidth","borderRadius","overflowY","mb","fontWeight","fontSize","TodoListApp","flex","textAlign","App","theme","createTheme","palette","background","default","primary","main","text","common","gray","gray2","gray3","water","antiFlashWhite","silverSand","argent","components","MuiButtonBase","styleOverrides","root","outline","MuiInputBase","WebkitTextFillColor","transition","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bc604bf.chunk.js","sourcesContent":["import {\n  Box,\n  Fab,\n  Checkbox,\n  TextField,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Fragment, useState } from 'react';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\n\nconst TodoForm = (props) => {\n  const {\n    setTodoCount = () => { },\n  } = props;\n\n  const [input, setInput] = useState('');\n  const [todo, setTodo] = useState([]);\n\n  const addTodoItem = (item) => {\n    if (!item) { return; } // prevent empty values\n\n    setTodo((prev) => [\n      ...prev, // saving previous state\n      {\n        id: Date.now(),\n        title: input,\n        completed: false,\n      },\n    ]);\n    setTodoCount((currentCount) => currentCount + 1);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodoItem(input);\n    setInput('');\n  };\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  const removeTodoItem = (id) => {\n    setTodo(todo.filter((item) => item.id !== id));\n    setTodoCount((currentCount) => currentCount - 1);\n  };\n\n  const toggleCompletion = (id) => {\n    const toggleItem = todo.map((item) => {\n      if (item.id === id) {\n        return { ...item, completed: !item.completed };\n      }\n\n      return item;\n    });\n\n    setTodo(toggleItem);\n  };\n\n  const todoForm = (\n      <form onSubmit={handleSubmit}>\n          <Box sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          >\n              <TextField\n                  sx={{\n                    width: '60%',\n                  }}\n                  variant=\"standard\"\n                  placeholder=\"Add a task here..\"\n                  value={input}\n                  onChange={handleInput}\n              />\n              <Fab\n                  disableRipple\n                  type=\"submit\"\n                  size=\"small\"\n                  sx={{\n                    ml: 4,\n                    color: 'text.main',\n                    boxShadow: 'none',\n                    backgroundColor: 'primary.main',\n                    '&:hover': {\n                      backgroundColor: 'common.argent',\n                    },\n                  }}\n                  aria-label=\"add\"\n                  onClick={handleSubmit}\n              >\n                  <AddIcon />\n              </Fab>\n          </Box>\n      </form>\n  );\n\n  const todoItems = todo.map((item) => (\n      <Fragment key={item.id}>\n          <Box sx={{\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n          >\n              <Box sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                textDecoration: item.completed ? 'line-through' : null,\n                color: item.completed ? 'common.silverSand' : 'common.gray',\n              }}\n              >\n                  <Checkbox\n                      disableRipple\n                      checked={item.completed}\n                      onChange={() => toggleCompletion(item.id)}\n                      icon={<RadioButtonUncheckedIcon />}\n                      checkedIcon={<RadioButtonCheckedIcon />}\n                  />\n                  <Box sx={{ overflowWrap: 'break-word' }}>\n                      <Typography>\n                          {item.title}\n                      </Typography>\n                  </Box>\n              </Box>\n              <Box>\n                  <IconButton\n                      disableRipple\n                      aria-label=\"delete\"\n                      onClick={() => removeTodoItem(item.id)}\n                  >\n                      <ClearIcon sx={{ color: 'common.gray2' }} />\n                  </IconButton>\n              </Box>\n          </Box>\n      </Fragment>\n  ));\n  return (\n      <Box>\n          {todoForm}\n          <Box mt={6} px={2}>\n              {todoItems}\n          </Box>\n      </Box>\n  );\n};\n\nexport default TodoForm;\n","import {\n  Box,\n  Card,\n  Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport TodoForm from '../TodoForm/TodoForm';\n\nconst TodoCard = () => {\n  const [todoCount, setTodoCount] = useState(0);\n\n  const currentDate = new Date().toLocaleString(\n    'en-us',\n    {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric',\n    },\n  );\n  const currentDay = new Date(currentDate).toLocaleString(\n    'en-us',\n    { weekday: 'long' },\n  );\n\n  return (\n      <Box sx={{\n        width: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      >\n          <Card sx={{\n            px: 4,\n            py: 6,\n            m: 1,\n            width: 1,\n            height: 560,\n            maxWidth: 530,\n            borderRadius: 3,\n            overflowY: 'scroll',\n            boxShadow: `0 10px 20px rgba(0, 0, 0, .05), \n                    0 6px 6px rgba(0, 0, 0, .05)`,\n          }}\n          >\n              <Box sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                mb: 5,\n              }}\n              >\n                  <Typography\n                      variant=\"h4\"\n                      color=\"common.gray3\"\n                      sx={{ fontWeight: 600 }}\n                  >\n                      {currentDay}\n                  </Typography>\n                  <Typography\n                      color=\"common.gray3\"\n                  >\n                      {currentDate}\n                  </Typography>\n                  <Box mt={2}>\n                      <Typography\n                          color=\"common.gray2\"\n                          sx={{\n                            fontWeight: 400,\n                            fontSize: 13,\n                          }}\n                      >\n                          {`${todoCount} tasks`}\n                      </Typography>\n                  </Box>\n              </Box>\n              <TodoForm setTodoCount={setTodoCount} />\n          </Card>\n      </Box>\n  );\n};\n\nexport default TodoCard;\n","import { Box } from '@mui/material';\nimport TodoCard from './TodoCard/TodoCard';\n\nconst TodoListApp = () => (\n    <Box sx={{\n      width: '100vw',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n    >\n        <Box sx={{\n          display: 'flex',\n          flex: 5,\n          width: 1,\n        }}\n        >\n            <TodoCard />\n        </Box>\n        <Box sx={{\n          width: 1,\n          flex: 1,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'end',\n          textAlign: 'center',\n          color: 'common.gray',\n          fontSize: 13,\n          mb: 1,\n        }}\n        >\n            — IbtisamZ —\n        </Box>\n    </Box>\n);\nexport default TodoListApp;\n","import CssBaseline from '@mui/material/CssBaseline';\nimport createTheme from '@mui/material/styles/createTheme';\nimport ThemeProvider from '@mui/material/styles/ThemeProvider';\nimport TodoListApp from './components/TodoListApp';\n\nconst App = () => {\n  const theme = createTheme({\n    palette: {\n      background: {\n        default: '#efeeea',\n      },\n      primary: {\n        main: '#bab6b6',\n      },\n      text: {\n        main: '#fff',\n      },\n      common: {\n        gray: '#808080',\n        gray2: 'rgba(0, 0, 0, 0.2)',\n        gray3: 'gray',\n        water: 'rgba(193, 217, 220)',\n        antiFlashWhite: '#eff1f2',\n        silverSand: '#b8c3c6',\n        argent: '#c4c2c2',\n      },\n    },\n    components: {\n      MuiButtonBase: {\n        styleOverrides: {\n          root: {\n            '&:focus': {\n              outline: 'none',\n            },\n          },\n        },\n      },\n      MuiInputBase: {\n        styleOverrides: {\n          root: {\n            color: '#808080',\n          },\n          input: {\n            '&:-webkit-autofill': {\n              WebkitTextFillColor: '#808080',\n              transition: '1000000s ease-in-out',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <TodoListApp />\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}