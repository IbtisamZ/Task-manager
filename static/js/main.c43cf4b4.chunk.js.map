{"version":3,"sources":["components/TaskForm.js","components/TaskManager.js","App.js","index.js"],"names":["TaskForm","props","addTask","setInput","input","type","placeholder","value","name","className","onChange","e","target","onClick","preventDefault","TaskManager","useState","tasks","setTasks","tasksData","id","Date","now","title","completed","removeTask","filter","task","allTasks","map","item","todo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAqCeA,EAnCE,SAACC,GACd,IACIC,EAGAD,EAHAC,QACAC,EAEAF,EAFAE,SACAC,EACAH,EADAG,MAcJ,OACA,gCACI,8CACA,iCACI,uBACIC,KAAK,OACLC,YAAY,eACZC,MAAOH,EACPI,KAAK,OACLC,UAAU,aACVC,SAdQ,SAACC,GACjBR,EAASQ,EAAEC,OAAOL,UAed,wBAAQE,UAAU,aAAaI,QAtBlB,SAACF,GAClBA,EAAEG,iBACFZ,EAAQE,GACRD,EAAS,KAmBL,wBCkCGY,EA/DK,WAGhB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcD,EAAd,KAEMgB,EAAY,CACdC,GAAIC,KAAKC,MACTC,MAAOnB,EACPoB,WAAW,GAUTC,EAAa,SAACL,GAChBF,EAASD,EAAMS,QAAO,SAACC,GAAD,OAASA,EAAKP,KAAOA,OAezCQ,EAAWX,EAAMY,KAAI,SAACC,GAExB,OACA,mCACA,sBAAKrB,UAAU,YAAf,UAEI,qBAAKA,UAAWqB,EAAKN,UAAY,4BAA8B,aAAcX,QAAS,kBAhBtEO,EAgB2FU,EAAKV,QAfpHF,EAASD,EAAMY,KAAI,SAAAE,GACjB,OAAIA,EAAKX,KAAOA,EACP,2BAAKW,GAAZ,IAAkBP,WAAYO,EAAKP,YAE9BO,MALU,IAACX,GAgBhB,SAAsHU,EAAKP,QAC3H,wBAAQd,UAAU,sCAAsCI,QAAS,kBAAMY,EAAWK,EAAKV,KAAvF,iBAH4BU,EAAKV,SASzC,OACA,qCACI,cAAC,EAAD,CACAlB,QAtCY,SAACyB,GACRA,GACLT,EAAS,GAAD,mBAAKD,GAAL,CAAYE,MAqCpBf,MAAOA,EACPD,SAAUA,EACVsB,WAAYA,EACZR,MAAOA,EACPC,SAAUA,IACV,qBAAKT,UAAU,kBAAf,SACCmB,QCpDMI,EANH,kBACV,qBAAKvB,UAAU,mBAAf,SACE,cAAC,EAAD,OCAJwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c43cf4b4.chunk.js","sourcesContent":["import React from 'react';\n\nconst TaskForm = (props) => {\n    const {\n        addTask,\n        setInput,\n        input,\n    } = props;\n\n    // prevent browser reloading\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTask(input); // adding task\n        setInput('');\n    };\n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n    };\n\n    return (\n    <div>\n        <h1>Task Manager</h1>\n        <form > \n            <input\n                type=\"text\"\n                placeholder=\"Add a task..\"\n                value={input}\n                name=\"text\"\n                className=\"task-input\"\n                onChange={handleInput}\n            />\n            <button className=\"add-button\" onClick={handleSubmit}>Add</button>\n        </form>\n    </div>\n    );\n}\nexport default TaskForm;","import React, {useState} from 'react';\nimport TaskForm from './TaskForm';\n\nconst TaskManager = () => {\n\n    // set states\n    const [tasks, setTasks] = useState([]);\n    const [input, setInput] = useState('');\n\n    const tasksData = {\n        id: Date.now(),\n        title: input,\n        completed: false\n    }; // to create tasks\n\n    // adding tasks\n    const addTask = (task) => {\n        if (!task) { return; } // to prevent empty tasks\n        setTasks([...tasks, tasksData]);\n    };\n\n    // deleting tasks\n    const removeTask = (id) => {\n        setTasks(tasks.filter((task)=> task.id !== id));\n        // console.log('DELETEDD =>', id);\n    };\n\n    // toggling task state (completion)\n    const toggleComplete = (id) => {\n        setTasks(tasks.map(todo => {\n          if (todo.id === id) {\n            return { ...todo, completed: !todo.completed }; // to toggle state\n          }\n          return todo;\n        }));\n      };\n\n    // displaying tasks\n    const allTasks = tasks.map((item) => {\n        // console.log(item);\n        return (\n        <>\n        <div className=\"task-item\" key={item.id}>\n            {/* <input type=\"checkbox\" value=\"completed\" name=\"completed\" id=\"completed\"></input> */}\n            <div className={item.completed ? \"strike-through task-title\" : \"task-title\"} onClick={() => toggleComplete(item.id)}>{item.title}</div>\n            <button className=\"task-remove-button font-weight-bold\" onClick={() => removeTask(item.id)}>X</button>\n        </div>\n        </>\n        );\n    });\n\n    return (\n    <>\n        <TaskForm \n        addTask={addTask} \n        input={input} \n        setInput={setInput} \n        removeTask={removeTask} \n        tasks={tasks} \n        setTasks={setTasks} />\n        <div className=\"tasks-container\">\n        {allTasks}\n        </div>\n    </>\n    );\n}\nexport default TaskManager;","import './App.css';\nimport TaskManager from './components/TaskManager';\n\nconst App = () => (\n  <div className=\"task-manager-app\">\n    <TaskManager />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}